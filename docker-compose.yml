services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: yourusername
      POSTGRES_PASSWORD: GvXWmzMLP03HNmrp
      POSTGRES_DB: nestdb_prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U yourusername"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    networks:
      - app-network

  frontend-builder:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: frontend-builder
    command: ["npm", "run", "build"]
    volumes:
      - frontend-dist:/app/dist
    environment:
      - VITE_API_URL=http://25.5.161.101:3000/v1
      - BASE_URL=/
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    container_name: backend
    depends_on:
      - postgres
      - frontend-builder
    ports:
      - "3000:3000"
    volumes:
      - frontend-dist:/app/backend/dist/public:ro
    environment:
      - CLIENT_ROUTER_MODE=history
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
      - DB_PORT=5432
      - DB_HOST=postgres
      - DB_USER=yourusername
      - DB_PASSWORD=GvXWmzMLP03HNmrp
      - DB_NAME=nestdb_prod
      - JWT_SECRET=PROD_SECRET_KEY
      - JWT_EXPIRES_IN=1d
      - DB_SYNCHRONIZE=true
    networks:
      - app-network

volumes:
  postgres_data:
  frontend-dist:

networks:
  app-network:
    driver: bridge
