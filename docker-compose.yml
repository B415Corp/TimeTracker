version: "3.8"

services:
  postgres:
    image: postgres:14
    container_name: timetracker_postgres
    environment:
      POSTGRES_USER: yourusername
      POSTGRES_PASSWORD: GvXWmzMLP03HNmrp
      POSTGRES_DB: nestdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U yourusername"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  adminer:
    image: adminer
    container_name: timetracker_adminer
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: timetracker_backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_PORT=5432
      - DB_HOST=postgres
      - DB_USER=yourusername
      - DB_PASSWORD=GvXWmzMLP03HNmrp
      - DB_NAME=nestdb
      - JWT_SECRET=PROD_SECRET_KEY
      - JWT_EXPIRES_IN=1d
      - DB_SYNCHRONIZE=true
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
      args:
        VITE_API_URL: /v1
    container_name: timetracker_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
