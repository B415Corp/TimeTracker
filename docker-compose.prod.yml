version: "3.8"

# Продакшен конфигурация
services:
  postgres:
    extends:
      file: docker-compose.yml
      service: postgres
    restart: unless-stopped
    # Убираем порт для безопасности
    ports: []
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Добавляем backup volume
      - postgres_backups:/backups

  adminer:
    extends:
      file: docker-compose.yml
      service: adminer
    # В продакшене можно отключить или ограничить доступ
    profiles:
      - admin
    restart: unless-stopped

  backend:
    extends:
      file: docker-compose.yml
      service: backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - DB_SYNCHRONIZE=false
    # Убираем порт, доступ только через nginx
    ports: []
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  frontend:
    extends:
      file: docker-compose.yml
      service: frontend
    restart: unless-stopped
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
      args:
        VITE_API_URL: /api/v1
    # Убираем порты, доступ только через nginx
    ports: []
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # Nginx reverse proxy для продакшена
  nginx:
    image: nginx:alpine
    container_name: timetracker_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  postgres_data:
  postgres_backups:

networks:
  app-network:
    driver: bridge 